# TzTime <a name="tztime"></a>

This is a drop-in replacement for JavaScript's native Date constructor which
adds many useful and arguably saner API enhancements, and makes it
time-zone-aware.

 + [`TzTime`](#tztime)
   - [Constructor](#constructor)
   - [`#__timezone__`](#timezone)
   - [`#timezone`](#timezone)
 + [`#getTimezoneOffset()`](#gettimezoneoffset)
 + [`setTimezoneOffset()`](#settimezoneoffset)


## `TzTime` <a name="tztime"></a>

Crates a JavaScript Date object with enhanced API and time zone awareness.

Most of the native Date's API is retained. However, some time-zone-related
methods like `#getTimezoneOffset()` have been modified to support time zone
manipulation.

In general, you can assume that an undocumented method that exists in native
Date global works as expected.

### Constructor <a name="constructor"></a>

    new TzTime();
    new TzTime(value);
    new TzTime(dateString);
    new TzTime(year, month, day [, hour, minute, second, millisecond]);


All constructor arguments are compliant with the standard JavaScript Date
constructor arguments. Please refer to [Date
/developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)
for more information.

One non-standard form is added:

    new TzTime(dateString, format)


The non-standard form will parse teh `dateString` using supplied `format`
string which is compatible with `strptime` formatting.

Unlike the JavaScript Date constructor, calling TzTime without the `new`
keyword has the same behavior as calling it with it.

### `#__timezone__` <a name="timezone"></a>

This property is a private property that stores the currently set timezone
offset. This property is used to calcualte the correct UTC time. Please do not
override this property.

To set the time zone use either `#timezone` attribute, or
`#setTimezoneOffset()` method.

TzTime constructor inherits from the native Date prototype.

### `#timezone` <a name="timezone"></a>

This attribute is an accessor for the private `#__timezone__` property. It can
be read and assigned normally and it correctly shifts the time of the
underlying object. The value of the attribute is an UTC offset in minutes.

Unlike the native `#getTimezoneOffset()` method, these values are calculated as
positive integers from UTC towards East, and negative towards West, as is usual
for time zones.

The `#getTimezoneOffset()` method retains the native behavior of giving the
offset in reverse, if you need to rely on such behavior.

## `#getTimezoneOffset()` <a name="gettimezoneoffset"></a>

This method is different from the native implementation. It returns the actual
time zone set on the TzTime instance instead of the local time zone of the
platform. Like the native implementation, it returns the opposite of the actual
UTC offset in integer minutes.

## `setTimezoneOffset()` <a name="settimezoneoffset"></a>

Sets the time zone using the reverse offset. This is a counterpart of
`#getTimezoneOffset()` that is missing in the native implementation. It is here
for the sake of compatibility with `#getTimezoneOffset()` but you are generally
recommended to use the `#timezone` attribute instead.