// Generated by CoffeeScript 1.6.3
var TzTime, assert, chai, equal, root;

if (typeof require !== "undefined" && require !== null) {
  chai = require('chai');
  TzTime = require('../tztime');
}

if (typeof GLOBAL === "undefined" || GLOBAL === null) {
  root = this;
} else {
  root = GLOBAL;
}

assert = chai.assert;

equal = equal;

describe('TzTime.parse', function() {
  it('should return null when input is bogus', function() {
    var d;
    d = TzTime.parse('bogus input', '%Y-%m-%d');
    return equal(d, null);
  });
  it('should parse full month name', function() {
    var d, idx, month, _i, _len, _ref, _results;
    _ref = TzTime.MONTHS;
    _results = [];
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      month = _ref[idx];
      d = TzTime.parse("" + month + " 1 2013", '%B %D %Y');
      _results.push(equal(d.getMonth(), idx));
    }
    return _results;
  });
  it('should parse full month case insensitively', function() {
    var d, idx, month, _i, _len, _ref, _results;
    _ref = TzTime.MONTHS;
    _results = [];
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      month = _ref[idx];
      d = TzTime.parse("" + (month.toLowerCase()) + " 1 2013", '%B %D %Y');
      _results.push(equal(d.getMonth(), idx));
    }
    return _results;
  });
  it('should parse short month name', function() {
    var d, idx, month, _i, _len, _ref, _results;
    _ref = TzTime.MNTH;
    _results = [];
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      month = _ref[idx];
      d = TzTime.parse("" + month + " 1 2013", '%b %D %Y');
      _results.push(equal(d.getMonth(), idx));
    }
    return _results;
  });
  it('should parse short month names case insensitively', function() {
    var d, idx, month, _i, _len, _ref, _results;
    _ref = TzTime.MNTH;
    _results = [];
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      month = _ref[idx];
      d = TzTime.parse("" + (month.toLowerCase()) + " 1 2013", '%b %D %Y');
      _results.push(equal(d.getMonth(), idx));
    }
    return _results;
  });
  return it('should parse decimal seconds', function() {
    var d;
    d = TzTime.parse('2013-12-01 12:00:01.12', '%Y-%m-%d %H:%M:%f');
    equal(d.getSeconds(), 1);
    return equal(d.getMilliseconds(), 120);
  });
});
